#!/bin/bash

# Written by Rodrigo Esteves baitsart@gmail.com www.youtube.com/user/baitsart 
# GNU License. You are free to modify and redistribute   # 

language="es"

if [ -z "$1" ]; then
/bin/bash ~/.voice_commands/play_stop.sh
exit
fi
if echo "$@" | grep -x -q -- "-r\|-run"; then
/bin/bash ~/.voice_commands/play_stop.sh
exit
fi
if echo "$@" | grep -q -- "-vol\|-volume"; then
microphe_port=$(sed -n '1p' ~/.voice_commands/Scripts/microphone_port | cut -d '=' -f2)
input=$(sed -n '1p' ~/.voice_commands/Scripts/input_port | cut -d '=' -f2)
command_line=$(echo "$@" | sed 's/volume/vol/g;s/vol/vol /g;s/vol=/vol /g' | sed 's/  / /g' | tr ' ' '\n' | grep -A1 -- "-vol\|-vol" | tail -n1 )
if (( "$command_line" >= 200 )); then
echo "
Error. Volumen, es (<= 200).
"
exit 1
fi
if echo "
Nivel de volumen a: `echo "$command_line" | grep -E -x '[0-9]*'`%" ; then
volume_mic=$(echo "$command_line" \* 100  | bc -l )
pacmd set-source-volume "$microphe_port" 0x"$volume_mic" >/tmp/result_vol_mic_config
if
grep -q "You need to specify a volume" /tmp/result_vol_mic_config; then
echo "
Salida del error:
`cat /tmp/result_vol_mic_config | tail -n 2 | sed 's/>>>//'

Ejecute:
 « v-c -mic [NUM] »	Configure el puerto, por defecto [1,2,3...]

E inténtelo de nuevo.
`"
fi
rm /tmp/result_vol_mic_config
exit
fi
fi
if echo "$@" | grep -q -- "-mic\|-microphone"; then
microphe_port=$(echo "$@" | sed 's/microphone/mic/g;s/mic/mic /g;s/mic=/mic /g' | sed 's/  / /g' | tr ' ' '\n' | grep -A1 -- "-mic\|-mic" | tail -n1 )
if echo "$microphe_port" | grep -E -v -x '[0-9]*' ; then
microphe_port=$(sed -n '1p' ~/.voice_commands/Scripts/microphone_port | cut -d '=' -f2)
fi
input_opt=$(echo "$@" | sed 's/microphone/mic/g;s/mic/mic /g;s/mic=/mic /g' | sed 's/  / /g' | sed 's/input- /input-/' | sed 's/input-=/input-/' | sed 's/  / /g' | tr ' ' '\n' | grep -A2 -- "-mic\|-mic" | tail -n1 )
if echo "$input_opt" | grep -q -- "input-"; then
input_opt=$(echo "$input_opt" | sed 's/input-//' )
input=$(echo ";input-microphone-"$input_opt"" )
if echo "$input_opt" | grep -E -v -x '[0-9]*' ; then
input=$(sed -n '1p' ~/.voice_commands/Scripts/input_port | cut -d '=' -f2)
fi
if [ -z "$input_opt" ] ; then
input=""
fi
fi
sh ~/.voice_commands/Scripts/micro_config.sh "$microphe_port" "$input"
exit
fi
if echo "$@" | sed 's/-lang/-l/g;s/-l/-l /g;s/-l=/-l /g' | tr ' ' '\n' | grep -x -q -- "-l"; then

lang=$(echo "$@" | sed 's/-try//g;s/-t//g;s/-update//g;s/-u//g;s/-modify//g;s/-mod//g;s/-help//g;s/-h//g;s/-run//g;s/-r//g;s/-lang//g;s/-l//' | sed 's/^[ ]*//' | awk '{print $1}')
echo "(af africano), (ar árabe), (az azerbaiyán), (be bielorruso), (bg búlgaro), (bn bengalí), (ca catalán), (cs checo), (cy galés), (da danés), (de alemán), (el griego), (en inglés), (eo esperanto), (es español), (et estonia), (eu vasco), (fa persa), (fi finlandés), (fr francés), (ga irlandés), (gl gallego), (gu gujarati), (hi hindi), (hr croata), (ht haitiano), (hu húngaro), (hy armenio), (id indonesio), (is islandés), (it italiano), (iw hebreo), (ja japonés), (ka georgiano), (km khmer), (kn canarés), (ko coreano), (la latino), (lo lao), (lt lituano), (lv letón), (mk macedonio), (ms malayo), (mt maltés), (nl holandés), (no noruego), (pl polaco), (pt portugués), (ro rumano), (ru ruso), (sk eslovaco), (sl esloveno), (sq albanés), (sr serbio), (sv sueco), (sw medio), (ta tamil), (te telugu), (th tailandés), (tl filipino), (tr turco), (uk ucranio), (ur urdu), (vi vietnamita), (yi yídish), (zh-CN chino)" > /tmp/lang 
language_list=$(cat /tmp/lang)

if echo "$language_list" | sed 's/), (/\n/g;s/(//g;s/)//g' | cut -d' ' -f2 | grep -x -q -i "$lang"; then
	opt_lang=$( echo "$language_list" | sed 's/), (/\n/g;s/(//g;s/)//g'  | grep -i "$lang" | awk '{print $1}')
	language=$( echo "$language_list" | sed 's/), (/\n/g;s/(//g;s/)//g'  | grep -i "$lang" | awk '{print $1}')
commands=$(echo "$@" | sed 's/-try//g;s/-t//g;s/-lang//g;s/-l//g;s/'"$lang"'//' | sed 's/^[ ]*//' )
fi
if echo "$language_list" | sed 's/), (/\n/g;s/(//g;s/)//g' | cut -d' ' -f1 | grep -x -q -i "$lang"; then
	opt_lang=$( echo "$language_list" | sed 's/), (/\n/g;s/(//g;s/)//g'  | grep -i "$lang " | awk '{print $1}')
	language=$( echo "$language_list" | sed 's/), (/\n/g;s/(//g;s/)//g'  | grep -i "$lang " | awk '{print $1}')
fi
if [ -z "$opt_lang" ]; then
echo "No hay opción lang: $lang
Lista de idiomas disponibles es:
 (Abreviatura idioma, o idioma nombre completo)

`echo "$language_list"`"
exit 0;
fi
fi
if echo "$1" | grep -x -q -- "-r\|-run"; then
/bin/bash ~/.voice_commands/play_stop.sh "$language"
exit
fi
if echo "$1" | grep -x -q -- "-t\|-try"; then
commands=$(echo "$@" | sed 's/-try //g;s/-t //g;s/  / /g;s/-lang '"$language"'//g;s/-l '"$language"'//g;s/-lang='"$language"'//g;s/-l='"$language"'//g' | sed 's/^[ ]*//')
CMD_RETRY=$(sed -n '111p' ~/.voice_commands/"v-c LANGS"/commands-"$language" | cut -d "=" -f 2)
if echo "$commands" | grep -q "$CMD_RETRY" ; then
[[ -f /tmp/speech_recognition_prev.tmp ]] || notify-send "No hay un comando anterior" "Ejecutar de nuevo, por favor"
mv /tmp/speech_recognition_prev.tmp /tmp/speech_recognition.tmp
/bin/bash ~/.voice_commands/speech_commands.sh "$language"
exit 1
fi
echo "$commands" > /tmp/speech_recognition.tmp
/bin/bash ~/.voice_commands/speech_commands.sh "$language"
exit 1
fi

if echo "$1" | grep -q -- "-m\|-mod"; then
if [[ -f ~/.voice_commands/"v-c LANGS"/LÉEME-"$language".md ]]; then
gedit ~/.voice_commands/"v-c LANGS"/LÉEME-"$language".md ~/.voice_commands/"v-c LANGS"/commands-"$language"
exit
fi
echo "
Ejecute:
 « v-c -update -lang "'"'""$language""'"'" »	

E inténtelo de nuevo."
exit 1
fi
if echo "$1" | grep -q -- "-u\|-update"; then
sh ~/.voice_commands/Scripts/hace_leeme.sh "$language"
exit
fi
if echo "$1" | grep -x -q -i -- "-h"; then
if [[ -f ~/.voice_commands/"v-c LANGS"/LÉEME-"$language".md ]]; then
cat ~/.voice_commands/"v-c LANGS"/LÉEME-"$language".md
exit
fi
echo "
Ejecute:
 « v-c -update -lang "'"'""$language""'"'" »	

E inténtelo de nuevo."
exit 1
fi
if echo "$1" | grep -x -q -i -- "-a\|-add"; then
text_line=$(echo "$@" | sed 's/'"$1"'//' )
sh ~/.voice_commands/Scripts/add_new.sh "$text_line"
exit
fi
if echo "$1" | grep -x -q -i -- "-v"; then
echo "# Comandos de Voz (comanda tu PC con órdenes habladas) #
Versión 1.0.2-1"
exit
fi
if echo "$1" | grep -x -q -i -- "--help"; then
echo "
	# Comandos de Voz (comanda tu PC con órdenes habladas) #
Versión 1.0.2-1
	v-c , command line options

v-c -r		Correr
v-c -l -lang	Para seleccionar otro, de 67 idiomas, en los comandos:
		 ( « -run », « -try », « -modify », « -update » and « -h » ).
v-c -t -try	Para tratar cualquier comando. « v-c -try "'"'"para las llamadas a métodos"'"'" »
v-c -mic [NUM]	ajuste el puerto, utilizar de forma predeterminada [1,2,3...]. y, si [input-"'"'"1,2,3..."'"'"].
v-c -vol	Establecer el volumen del micrófono que se usa por defecto. Nivel (<= 200).
v-c -m -mod	Para modificar el archivo de comandos y el archivo LÉEME.
v-c -u -update	Para actualizar el archivo LÉEME, luego de modificar el archivo de comandos.
v-c -a -add	Para agregar, Crear, Una nueva acción de comando de voz « v-c -add »,
		 or « v-c -add "'"'"nombre de la acción"'"'" »,
		 or « v-c -add "'"'"nombre de la acción=método de una llamada;otro método de llamada"'"'"
		La separación entre los NAME y ORDER Con =. Y entre ORDERS, Con ;
v-c -v		Imprimir la versión del programa .
v-c -h		Ver instrucciones del documento LÉEME.
v-c --help	Mostrar este mensaje"
exit
fi
echo "No hay un comando $1
Intentar « v-c --help », Para ver los comandos disponibles"

